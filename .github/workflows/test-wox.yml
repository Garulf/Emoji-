name: "Test Wox"
on:
  pull_request: 
  workflow_dispatch: 
  push:
    tags-ignore:
      - 'v*'
    paths-ignore: 
      - .github/workflows/*
      - README.md
      - assets/*
env:
  PYTHON_VER: 3.8
  SETUP_EXE: Wox-Full-Installer.exe
jobs:
  deps:
    name: "Wox"
    runs-on: windows-latest
    strategy:
      matrix:
        wox_ver: [1.4.1196]
    steps:
      - name: Load Cache
        uses: actions/cache@v2
        id: wox_cache
        if: startsWith(runner.os, 'Windows')
        with:
          path: |
            ~\AppData\Roaming\Wox\*
            !~\AppData\Roaming\Wox\Plugins\*
            ~\AppData\Local\Wox\**
          key: ${{ runner.os }}-flow-${{ matrix.wox_ver }}
      - name: Download Wox
        id: download
        if: steps.wox_cache.outputs.cache-hit != 'true'
        run: |
          curl.exe -L -o ${{ env.SETUP_EXE }} "https://github.com/Wox-launcher/Wox/releases/download/v${{matrix.wox_ver}}/Wox-Full-Installer.1.4.1196.exe"
      - name: Install Wox
        if: steps.wox_cache.outputs.cache-hit != 'true'
        run: .\${{ env.SETUP_EXE }}
        shell: cmd
      - name: Checkout Plugin Repo
        uses: actions/checkout@v2
        with:
          path: ${{github.event.repository.name}}
      - name: Move checkout repo
        run: |
          $repo_path = Join-Path -Path $pwd -ChildPath ${{github.event.repository.name}}
          $plugin_path = Join-Path -Path $env:APPDATA -ChildPath 'Wox' | Join-Path -ChildPath 'Plugins' | Join-Path -ChildPath ${{github.event.repository.name}}
          if (Test-Path $plugin_path)
          {
            echo "Removing cached directory"
            Remove-Item $plugin_path
          }
          New-Item -ItemType SymbolicLink -Path $plugin_path -Target $repo_path
          echo "PLUGIN_PATH=$plugin_path" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          cd ${{ env.PLUGIN_PATH }}
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r ./requirements.txt -t ./lib
      - name: Get Plugin's Execute file
        id: exe
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: '${{ env.PLUGIN_PATH }}/plugin.json'
          prop_path: 'ExecuteFileName'
      - name: Test Run
        run: |
          cd ${{ env.PLUGIN_PATH }}
          python ${{steps.exe.outputs.prop}}
